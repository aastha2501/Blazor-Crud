@page "/addbook"
@using CRUD.Shared.DTO;
@using CRUD.Shared.Models;
@inject NavigationManager NavigationManager
@inject IToastService ToastService


@inject IBookService bookService

<PageTitle>Add Book</PageTitle>

<h3 class="mb-3 text-center">Add book</h3>
<EditForm Model="book" OnValidSubmit="HandleSubmit">
  
    <DataAnnotationsValidator/>
    <div class="card p-5">
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                    <label for="title" class="col-form-label required">
                        Title
                    </label>
                        <InputText @bind-Value="book.Title" id="title" class="form-control"></InputText>
                        <ValidationMessage For="@(() => book.Title)" />
            </div>
        </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label for="description" class="col-form-label required">Description</label>
                    <InputTextArea @bind-Value="book.Description" id="description" class="form-control"></InputTextArea>
                    <ValidationMessage For="@(() => book.Description)" />
                </div>
            </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                    <label for="author" class="col-form-label required">Author</label>
                        <InputText @bind-Value="book.Author" id="author" class="form-control"></InputText>
                        <ValidationMessage For="@(() => book.Author)" />
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                    <label for="category" class="col-form-label required">Category</label>
                        <InputSelect @bind-Value="book.CategoryId" class="form-select">
                            <option value="Select" selected disabled="disabled">Select an option</option>
                            @foreach (var category in Categories)
                            {
                                <option value="@category.Id">@category.Name</option>
                            }
                        </InputSelect>
                        <ValidationMessage For="@(() => book.CategoryId)" />
            </div>
        </div>
    </div>
    
    <div class="mt-3">
        <button type="submit" class="btn btn-primary">Submit</button>
        <button type="button" class="btn btn-dark" @onclick="HandleReset">Clear</button>
    </div>
    </div>
</EditForm>
<div>
    <BlazoredToasts />
</div>

@code {

    BookRequestModel book = new BookRequestModel();
    List<Category> Categories = new List<Category>();
    bool flag = false;

    Book obj = new Book();
    protected override async Task OnInitializedAsync()
    {
        Categories = await bookService.GetCategory();
    }

    async Task HandleSubmit()
    {
        var result = await bookService.AddBook(book);
        if(result != null)
        {
            ToastService.ShowSuccess("Added Successfully!!");
            NavigationManager.NavigateTo($"/");
        }

    }

    void HandleReset()
    {
        book.Title = string.Empty;
        book.Author = string.Empty;
        book.Description = string.Empty;
        book.CategoryId = string.Empty;
    }

}

